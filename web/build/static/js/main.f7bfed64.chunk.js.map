{"version":3,"sources":["svg/Items lazy /^/.//item0.*/.svg$/ groupOptions: {} namespace object","reportWebVitals.js","theme.js","global/providers.comp.js","parts/base.comp.js","hooks/use-current-user.hook.js","svg/logo-kv.svg","global/constants.js","hooks/use-url-address.hook.js","util/fetcher.js","hooks/use-market-items.hook.js","util/normalize-item.js","flow/fetch-account-items.script.js","parts/create-nft-cluster.comp.js","hooks/use-account-items.hook.js","flow/is-account-initialized.script.js","flow/util/tx.js","flow/initialize-account.tx.js","util/sleep.js","flow/fetch-flow-balance.script.js","hooks/use-flow-balance.hook.js","flow/fetch-kibbles-balance.script.js","hooks/use-kibbles-balance.hook.js","hooks/use-initialized.hook.js","parts/Images/Vault.jpg","parts/auth-cluster.comp.js","parts/init-cluster.comp.js","util/fmt-kibbles.js","parts/balance-cluster.comp.js","flow/fetch-market-item.script.js","flow/buy-market-item.tx.js","flow/cancel-market-listing.tx.js","hooks/use-market-item.hook.js","flow/util/batch.js","flow/fetch-account-item.script.js","flow/create-sale-offer.tx.js","hooks/use-account-item.hook.js","parts/account-item-cluster.comp.js","parts/market-item-cluster.comp.js","parts/market-items-cluster.comp.js","parts/account-items-cluster.comp.js","parts/Images/market.jpg","parts/Images/NFT.jpg","parts/Images/createnft.jpg","pages/account/index.js","global/config.js","index.js","pages/root.page.js","pages/not-found.page.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","fonts","body","heading","colors","Providers","children","StrictMode","Base","currentUser","atom","key","default","addr","loggedIn","cid","tools","logIn","fcl","logOut","signUp","changeUser","useCurrentUser","useRecoilState","user","setUser","useEffect","subscribe","LOADING","IDLE","PROCESSING","useAddress","address","useParams","withPrefix","fetcher","url","fetch","res","json","$marketItemsState","$marketItemsStatus","useMarketItems","status","setStatus","items","setItems","useSWR","process","initialData","refreshInterval","onLoadingSlow","onSuccess","latestSaleOffers","item","assign","itemID","sale_item_id","typeID","sale_item_type","name","sale_name","description","sale_description","owner","sale_item_owner","price","sale_price","txID","transaction_id","normalizeItem","onError","error","console","log","asMap","Map","has","CODE","fetchAccountItems","Address","d","sort","a","b","p1","CreateNFTCluster","useState","title1","setTitle1","setDescription","price1","setPrice1","price2","setPrice2","price3","setPrice3","length","setLength","showHide1","setShowHide1","showHide2","setShowHide2","Int","state","setState","cu","useAccountItems","showHide","handleLenChange","event","target","value","i","document","getElementById","checked","onSubmit","preventDefault","parseInt","mint","alert","htmlFor","placeholder","onChange","type","onClick","class","disabled","$state","atomFamily","selectorFamily","get","$status","method","headers","JSON","stringify","recipient","refresh","cdc","isAccountInitialized","send","script","args","arg","decode","noop","tx","mods","opts","onStart","onSubmission","onUpdate","onComplete","txId","fvsTx","info","unsub","onceSealed","txStatus","env","initializeAccount","invariant","transaction","limit","proposer","authz","payer","authorizations","sleep","ms","setTimeout","fetchFlowBalance","balance","valueAtom","statusAtom","useFlowBalance","setBalance","fetchKibblesBalance","useKibblesBalance","amount","$init","$computedInit","all","Kibble","KittyItems","KittyItemsMarket","useInitialized","init","setInit","isInitialized","useRecoilValue","flow","kibble","recheck","initialize","AuthCluster","backgroundImage","backgroundSize","backgroundPosition","p","rel","href","integrity","crossOrigin","className","alt","src","Vault","style","width","height","as","A","mr","to","WrappedAuthCluster","fallback","fmtBool","bool","Check","color","Close","InitCluster","mb","size","maxW","borderWidth","borderRadius","mt","colorScheme","WrappedInitCluster","props","fmtKibbles","cur","String","replace","filter","Boolean","join","BalanceCluster","kibbles","isNumeric","WrappedBalanceCluster","fetchMarketItem","t","Number","buyMarketItem","ownerAddress","cancelMarketListing","expand","split","useMarketItem","ownerItems","cuItems","comp","setItem","owned","sansPrefix","buy","cancelListing","callback","SET_CALLBACK","PROCESS","MAYBE_PROCESS","TIMEOUT","ENQUEUE","RESOLVE","HANDLERS","INIT","ctx","put","Set","setInterval","sendSelf","letter","uid","hold","reply","update","n","add","h","need","reduce","acc","result","_","results","have","delete","collate","px","push","addresses","enqueue","spawn","expectReply","timeout","fetchAccountItem","createSaleOffer","ItemImage","setItemImage","importedIcon","getImage","AccountItemCluster","accountItems","marketItems","forSale","sell","useAccountItem","listing","BUSY","WrappedAccountItemCluster","ml","MarketItemCluster","WrappedMarketItemCluster","MarketItemsCluster","WrappedMarketItemsCluster","AccountItemsCluster","WrappedAccountItemsCluster","MarketItemsCount","AccountItemsCount","l","InfoBanner","kibs","title","text","Banner","message","my","config","window","ReactDOM","render","exact","path","component","borderColor","fontSize","display","fontWeight","variant","backgroundColor","defaultIndex","NFT","market","create","Logo"],"mappings":"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","file":"static/js/main.f7bfed64.chunk.js","sourcesContent":["var map = {\n\t\"./item01.svg\": [\n\t\t159,\n\t\t4\n\t],\n\t\"./item02.svg\": [\n\t\t160,\n\t\t5\n\t],\n\t\"./item03.svg\": [\n\t\t161,\n\t\t6\n\t],\n\t\"./item04.svg\": [\n\t\t162,\n\t\t7\n\t],\n\t\"./item05.svg\": [\n\t\t163,\n\t\t8\n\t],\n\t\"./item06.svg\": [\n\t\t164,\n\t\t9\n\t],\n\t\"./item065.svg\": [\n\t\t165,\n\t\t10\n\t],\n\t\"./item097.svg\": [\n\t\t166,\n\t\t11\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 153;\nmodule.exports = webpackAsyncContext;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {extendTheme} from \"@chakra-ui/react\"\n\nconst theme = extendTheme({\n  fonts: {\n    body: \"'Montserrat', sans-serif\",\n    heading: \"'Montserrat', sans-serif\",\n  },\n  colors: {},\n})\n\nexport default theme\n","import React from \"react\"\nimport {RecoilRoot} from \"recoil\"\nimport {HashRouter as Router} from \"react-router-dom\"\nimport {ChakraProvider} from \"@chakra-ui/react\"\nimport theme from \"../theme.js\"\n\nexport function Providers({children}) {\n  return (\n    <React.StrictMode>\n      <RecoilRoot>\n        <ChakraProvider theme={theme}>\n          <Router>{children}</Router>\n        </ChakraProvider>\n      </RecoilRoot>\n    </React.StrictMode>\n  )\n}\n","export const Base = ({children}) => <div>{children}</div>\n","import {useEffect} from \"react\"\nimport {atom, useRecoilState} from \"recoil\"\nimport * as fcl from \"@onflow/fcl\"\n\nexport const currentUser = atom({\n  key: \"CURRENT_USER\",\n  default: {addr: null, loggedIn: null, cid: null},\n})\n\nconst tools = {\n  logIn: fcl.logIn,\n  logOut: fcl.unauthenticate,\n  signUp: fcl.signUp,\n  changeUser: fcl.reauthenticate,\n}\n\nexport function useCurrentUser() {\n  const [user, setUser] = useRecoilState(currentUser)\n  useEffect(() => fcl.currentUser().subscribe(setUser), [setUser])\n  return [user, user.addr != null, tools]\n}\n","export default __webpack_public_path__ + \"static/media/logo-kv.bbbfa163.svg\";","export const LOADING = \"LOADING\"\n\n// Exposed states of a Flow Transaction\nexport const IDLE = \"IDLE\"\nexport const PROCESSING = \"PROCESSING\"\nexport const SUCCESS = \"SUCCESS\"\nexport const ERROR = \"ERROR\"\n\n// How long to pause on a success or error message\n// before transitioning back to an IDLE state.\nexport const IDLE_DELAY = 1000\n","import {withPrefix} from \"@onflow/fcl\"\nimport {useParams} from \"react-router-dom\"\n\nexport function useAddress() {\n  const {address} = useParams()\n  return withPrefix(address)\n}\n","const fetcher = url => fetch(url).then(res => res.json())\n\nexport default fetcher\n","import {atom, useRecoilState} from \"recoil\"\nimport useSWR from \"swr\"\nimport {IDLE, LOADING} from \"../global/constants\"\nimport fetcher from \"../util/fetcher\"\nimport normalizeItem from \"../util/normalize-item\"\n\nexport const $marketItemsState = atom({\n  key: \"market-items::state\",\n  default: [],\n})\n\nexport const $marketItemsStatus = atom({\n  key: \"market-items::status\",\n  default: IDLE,\n})\n\nexport function useMarketItems() {\n  const url = process.env.REACT_APP_API_MARKET_ITEMS_LIST\n  const [status, setStatus] = useRecoilState($marketItemsStatus)\n  const [items, setItems] = useRecoilState($marketItemsState)\n\n  useSWR(url, fetcher, {\n    initialData: items,\n    refreshInterval: 10,\n    onLoadingSlow: () => {\n      setStatus(LOADING)\n    },\n    onSuccess: ({latestSaleOffers}) => {\n      setItems(latestSaleOffers.map(item => normalizeItem(item)))\n      setStatus(IDLE)\n    },\n    onError: error => {\n      console.log(\"Failed to fetch market items.\", error)\n    },\n  })\n\n  const asMap = new Map(items.map(item => [item.itemID, item]))\n\n  return {\n    status,\n    items,\n    has(item) {\n      return asMap.has(item.itemID)\n    },\n  }\n}\n","export default function normalizeItem(item) {\n  return Object.assign(\n    {},\n    {\n      itemID: item.sale_item_id,\n      typeID: item.sale_item_type,\n      name: item.sale_name,\n      description: item.sale_description,\n      owner: item.sale_item_owner,\n      price: item.sale_price,\n      txID: item.transaction_id,\n    }\n  )\n}\n","import * as fcl from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = fcl.cdc`\n  import NonFungibleToken from 0xNonFungibleToken\n  import KittyItems from 0xKittyItems\n\n  pub fun main(address: Address): [UInt64] {\n    if let collection =  getAccount(address).getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath).borrow() {\n      return collection.getIDs()\n    }\n\n    return []\n  }\n`\n\nexport function fetchAccountItems(address) {\n  if (address == null) return Promise.resolve([])\n\n  // prettier-ignore\n  return fcl.send([\n    fcl.script(CODE),\n    fcl.args([\n      fcl.arg(address, Address)\n    ]),\n  ]).then(fcl.decode).then(d => d.sort((a, b) => a - b))\n}\n","import React, {useState} from \"react\"\nimport { Button, Center} from \"@chakra-ui/react\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {useAddress} from \"../hooks/use-url-address.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook.js\"\nimport { Int } from \"@onflow/types\"\n\nvar p1 = 0\n\n\n\nexport function CreateNFTCluster (){ \n    \n  \n    const [title1, setTitle1] = useState('');\n    const [description, setDescription] = useState('');\n    const [price1, setPrice1] = useState(null);\n    const [price2, setPrice2] = useState('');\n    const [price3, setPrice3] = useState('');\n    const [length, setLength] = useState('');\n    const [showHide1, setShowHide1] = useState(false);\n    const [showHide2, setShowHide2] = useState(false);\n    const [state, setState] = useState({\n      title1: '',\n      description: '',\n      price1: Int,\n      price2: '',\n      price3: '',\n      length: ''\n    })\n\n    const [cu] = useCurrentUser()\n    const address = useAddress()\n    const items = useAccountItems(address)\n    if (address == null) return <div>Not Found</div> \n\n  \n  // Form submitting logic, prevent default page refresh \n  const handleSubmit = (event) =>{\n    event.preventDefault();\n    \n    p1=parseInt(`${price1}`)\n\n    if(cu.addr === address){\n      items.mint()\n    }else{\n      alert(`Must be logged on to your account`)\n    }\n\n    if(title1===''){\n      alert(`\n        You must enter a Name for the NFT.\n      `)\n    }\n    if(description===''){\n      alert(`\n        You must enter a Description for the NFT.\n      `)\n    }\n    if(price1===null && showHide1===true){\n      alert(`\n        You must enter a Fixed Price for the NFT.\n      `)\n    }\n    if(price2==='' && showHide2===true){\n      alert(`\n        You must enter a Starting Bid Price for the NFT.\n      `)\n    }\n    if(length==='' && showHide2===true){\n      alert(`\n        You must enter a Auction Length for the NFT.\n      `)\n    }\n    if(title1!=='' && description!=='' && price1!==null && showHide1===true){\n      alert(`\n        ____Your NFT____\\n\n        Name : ${title1}\n        Description : ${description}\n        Price : ${price1}\n      `)\n    }\n    if(title1!=='' && description!=='' && price2!=='' && length!=='' && showHide2===true && price3===''){\n      alert(`\n        ____Your NFT____\\n\n        Name : ${title1}\n        Description : ${description}\n        Starting Bid : ${price2}\n        Auction Length : ${length}\n      `)\n    }\n    else if(title1!=='' && description!=='' && price2!=='' && length!=='' && showHide2===true && price3!==''){\n      alert(`\n        ____Your NFT____\\n\n        Name : ${title1}\n        Description : ${description}\n        Starting Bid : ${price2}\n        Immediate Buy Price : ${price3}\n        Auction Length : ${length}\n      `)\n    }\n  }\n\n  const showHide = (title1) => {\n    switch (title1) {\n      case \"showHide1\":\n        setShowHide1(!showHide1);\n        if(showHide2 === true){\n          setShowHide2(false)\n        };\n        break;\n      case \"showHide2\":\n        setShowHide2(!showHide2);\n        if(showHide1 === true){\n          setShowHide1(false)\n        };\n        break;\n        default:\n          setShowHide1(false);\n          setShowHide2(false);\n        break;\n    }\n  }\n\n\n  // Method causes to store all the values of the \n  // input field in react state single method handle \n  // input changes of all the input field using ES6 \n  // javascript feature computed property names\n  const handletitle1Change = (event) => {\n      // Computed property names\n      // keys of the objects are computed dynamically\n      setTitle1(event.target.value);\n      const title1 = event.target.value;\n        setState({\n          title1: title1\n        });\n      }\n\n  const handleDescChange = (event) => {\n      // Computed property names\n      // keys of the objects are computed dynamically\n      setDescription(event.target.value);\n      const description = event.target.value;\n        setState({\n          description: description\n        });\n      \n  }\n\n  const handleprice1Change = (event) => {\n    // Computed property names\n    // keys of the objects are computed dynamically\n    setPrice1(event.target.value);\n    const price1 = event.target.value;\n      setState({\n        price1: price1\n      });\n    \n}\n\nconst handleprice2Change = (event) => {\n  // Computed property names\n  // keys of the objects are computed dynamically\n  setPrice2(event.target.value);\n  const price2 = event.target.value;\n    setState({\n      price2: price2\n    });\n  \n}\n\nconst handleprice3Change = (event) => {\n  // Computed property names\n  // keys of the objects are computed dynamically\n  setPrice3(event.target.value);\n  const price3 = event.target.value;\n    setState({\n      price3: price3\n    });\n  \n}\n\nconst handleLenChange = (event) => {\n  // Computed property names\n  // keys of the objects are computed dynamically\n  setLength(event.target.value);\n  const length = event.target.value;\n    setState({\n      length: length\n    });\n    \n    const id = event.target.id;\n    for (var i = 1;i <= 3; i++)\n    {\n        document.getElementById(\"Check\" + i).checked = false;\n    }\n    document.getElementById(id).checked = true;\n  \n}\n\n  // Return a controlled form i.e. values of the \n  // input field not stored in DOM values are exist \n  // in react component itself as state\n    return(\n      <form onSubmit={handleSubmit}>\n        <Center>\n          <label htmlFor='title1'>Name: \n          <br />\n          <input\n            name=\"title1\"\n            value={state.title1}\n            placeholder='Name'\n            onChange={handletitle1Change}\n          />\n          </label>\n        </Center>\n          <br /><br />\n          <Center>\n          <label htmlFor='description'>What is this NFT?\n          <br />\n          <input\n            name='description'\n            value={state.description}\n            placeholder='Description'\n            onChange={handleDescChange}\n          />\n          </label>\n          </Center>\n          <br /><br />\n        <Center>\n        <label>\n        <input type=\"radio\" name=\"tab\" onClick={() => showHide(\"showHide1\")} />\n          Fixed Price:\n        </label>\n        </Center>\n        { showHide1 && \n          <div>\n          <Center>\n          <label htmlFor='price1'>\n          <Center>\n           <input\n              name='price1' \n              type=\"number\"\n              value={state.price1}\n              placeholder='10.00'\n              onChange={handleprice1Change}\n            />\n            </Center>\n            <br />\n            (**Price <b>NOT</b> Including Gas Fees**)\n            <br /><br />\n          </label>\n          </Center>\n         </div> \n        }\n        <Center>\n        <label> \n        <input type=\"radio\" name=\"tab\" onClick={() => showHide(\"showHide2\")} />\n          Auction NFT\n        </label>\n        </Center>\n        { showHide2 && \n          <div>\n            <Center>\n            Auction Length: \n            <div class='form-check form-check-inline'>\n            <label>\n            <input\n              name=\"length\"\n              type=\"radio\"\n              id=\"Check1\"\n              value={state.length = \"24\"}\n              onChange={handleLenChange} \n            />24 Hours\n            </label>\n            </div>\n            <div class='form-check form-check-inline'>\n            <label> \n            <input\n              name=\"length\"\n              type=\"radio\"\n              id=\"Check2\"\n              value={state.length = \"48\"}\n              onChange={handleLenChange} \n            />48 Hours\n            </label>\n            </div>\n            <div class='form-check form-check-inline'>\n            <label>\n            <input\n              name=\"length\"\n              type=\"radio\"\n              id=\"Check3\"\n              value={state.length = \"72\"}\n              onChange={handleLenChange} \n            />72 Hours\n            </label>\n            </div>\n            </Center>\n            <br />\n            <Center>\n            <label>\n            Starting Bid Price: \n          <input\n            name='price2' \n            value={state.price2}\n            placeholder='10.00'\n            onChange={handleprice2Change}\n          />\n          </label>\n          </Center>\n          <br />\n            <Center>\n            Immediate Buying Price: \n          <input\n            name='price3' \n            value={state.price3}\n            placeholder='10.00 (Optional)'\n            onChange={handleprice3Change}\n          />\n          </Center>\n          <br />\n          <Center>\n          (**Price&nbsp;<b>NOT</b>&nbsp;Including Gas Fees**)\n          </Center>\n          <br /><br />\n        </div>\n      }\n        <br />\n        \n        <Center>\n\n          <Button type=\"submit\" disabled={items.status !== IDLE}>\n            Create My NFT\n          </Button>\n\n        </Center>\n\n      </form>\n    )\n}\n\n\nexport {p1};\nconsole.log(`hey` + p1)\n\nexport default CreateNFTCluster;","import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchAccountItems} from \"../flow/fetch-account-items.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\nimport {p1} from \"../parts/create-nft-cluster.comp\"\n\nexport const $state = atomFamily({\n  key: \"account-items::state\",\n  default: selectorFamily({\n    key: \"account-items::default\",\n    get: address => async () => fetchAccountItems(address),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"account-items::status\",\n  default: IDLE,\n})\n\n\n\nexport function useAccountItems(address) {\n  const [items, setItems] = useRecoilState($state(address))\n  const [status, setStatus] = useRecoilState($status(address))\n  return {\n    ids: items,\n    status,\n\n    async mint() {\n      setStatus(PROCESSING)\n      await fetch(process.env.REACT_APP_API_KITTY_ITEM_MINT, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          recipient: address,\n          // Random typeID between 1 - 5\n          //Math.floor(Math.random() * (5 - 1)) + 1\n          typeID: p1,\n        }),\n      })\n      await fetchAccountItems(address).then(setItems)\n      setStatus(IDLE)\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchAccountItems(address).then(setItems)\n      setStatus(IDLE)\n    },\n\n  }\n}\n","import {send, decode, script, args, arg, cdc} from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  pub fun hasKibble(_ address: Address): Bool {\n    let receiver: Bool = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath)\n      .check()\n\n    let balance: Bool = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Balance}>(Kibble.BalancePublicPath)\n      .check()\n\n    return receiver && balance\n  }\n\n  pub fun hasKittyItems(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun hasKittyItemsMarket(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun main(address: Address): {String: Bool} {\n    let ret: {String: Bool} = {}\n    ret[\"Kibble\"] = hasKibble(address)\n    ret[\"KittyItems\"] = hasKittyItems(address)\n    ret[\"KittyItemsMarket\"] = hasKittyItemsMarket(address)\n    return ret\n  }\n`\n\nexport function isAccountInitialized(address) {\n  if (address == null) return Promise.resolve(false)\n\n  // prettier-ignore\n  return send([\n    script(CODE),\n    args([\n      arg(address, Address)\n    ])\n  ]).then(decode)\n}\n","import * as fcl from \"@onflow/fcl\"\n\nconst noop = async () => {}\n\nexport async function tx(mods = [], opts = {}) {\n  const onStart = opts.onStart || noop\n  const onSubmission = opts.onSubmission || noop\n  const onUpdate = opts.onUpdate || noop\n  const onSuccess = opts.onSuccess || noop\n  const onError = opts.onError || noop\n  const onComplete = opts.onComplete || noop\n\n  try {\n    onStart()\n    var txId = await fcl.send(mods).then(fcl.decode)\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:purple;font-weight:bold;font-family:monospace;\"\n    )\n    onSubmission(txId)\n    var unsub = await fcl.tx(txId).subscribe(onUpdate)\n    var txStatus = await fcl.tx(txId).onceSealed()\n    unsub()\n    console.info(\n      `%cTX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      \"color:green;font-weight:bold;font-family:monospace;\"\n    )\n    await onSuccess(txStatus)\n    return txStatus\n  } catch (error) {\n    console.error(\n      `TX[${txId}]: ${fvsTx(await fcl.config().get(\"env\"), txId)}`,\n      error\n    )\n    onError(error)\n  } finally {\n    await onComplete()\n  }\n}\n\nfunction fvsTx(env, txId) {\n  return `https://flow-view-source.com/${env}/tx/${txId}`\n}\n","// prettier-ignore\nimport {transaction, limit, proposer, payer, authorizations, authz, cdc} from \"@onflow/fcl\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {tx} from \"./util/tx\"\n\nconst CODE = cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  pub fun hasKibble(_ address: Address): Bool {\n    let receiver = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath)\n      .check()\n\n    let balance = getAccount(address)\n      .getCapability<&Kibble.Vault{FungibleToken.Balance}>(Kibble.BalancePublicPath)\n      .check()\n\n    return receiver && balance\n  }\n\n  pub fun hasItems(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath)\n      .check()\n  }\n\n  pub fun hasMarket(_ address: Address): Bool {\n    return getAccount(address)\n      .getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath)\n      .check()\n  }\n\n  transaction {\n    prepare(acct: AuthAccount) {\n      if !hasKibble(acct.address) {\n        if acct.borrow<&Kibble.Vault>(from: Kibble.VaultStoragePath) == nil {\n          acct.save(<-Kibble.createEmptyVault(), to: Kibble.VaultStoragePath)\n        }\n        acct.unlink(Kibble.ReceiverPublicPath)\n        acct.unlink(Kibble.BalancePublicPath)\n        acct.link<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath, target: Kibble.VaultStoragePath)\n        acct.link<&Kibble.Vault{FungibleToken.Balance}>(Kibble.BalancePublicPath, target: Kibble.VaultStoragePath)\n      }\n\n      if !hasItems(acct.address) {\n        if acct.borrow<&KittyItems.Collection>(from: KittyItems.CollectionStoragePath) == nil {\n          acct.save(<-KittyItems.createEmptyCollection(), to: KittyItems.CollectionStoragePath)\n        }\n        acct.unlink(KittyItems.CollectionPublicPath)\n        acct.link<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath, target: KittyItems.CollectionStoragePath)\n      }\n\n      if !hasMarket(acct.address) {\n        if acct.borrow<&KittyItemsMarket.Collection>(from: KittyItemsMarket.CollectionStoragePath) == nil {\n          acct.save(<-KittyItemsMarket.createEmptyCollection(), to: KittyItemsMarket.CollectionStoragePath)\n        }\n        acct.unlink(KittyItemsMarket.CollectionPublicPath)\n        acct.link<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath, target:KittyItemsMarket.CollectionStoragePath)\n      }\n    }\n  }\n`\n\nexport async function initializeAccount(address, opts = {}) {\n  // prettier-ignore\n  invariant(address != null, \"Tried to initialize an account but no address was supplied\")\n\n  return tx(\n    [\n      transaction(CODE),\n      limit(70),\n      proposer(authz),\n      payer(authz),\n      authorizations([authz]),\n    ],\n    opts\n  )\n}\n","export function sleep(ms = 500) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\n","import * as fcl from \"@onflow/fcl\"\n\nexport function fetchFlowBalance(address) {\n  if (address == null) return Promise.resolve(null)\n  return fcl.account(address).then(d => d.balance)\n}\n","import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchFlowBalance} from \"../flow/fetch-flow-balance.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\n\nexport const valueAtom = atomFamily({\n  key: \"flow-balance::state\",\n  default: selectorFamily({\n    key: \"flow-balance::default\",\n    get: address => async () => fetchFlowBalance(address),\n  }),\n})\n\nexport const statusAtom = atomFamily({\n  key: \"flow-balance::status\",\n  default: IDLE,\n})\n\nexport function useFlowBalance(address) {\n  const [balance, setBalance] = useRecoilState(valueAtom(address))\n  const [status, setStatus] = useRecoilState(statusAtom(address))\n\n  return {\n    balance,\n    status,\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchFlowBalance(address).then(setBalance)\n      setStatus(IDLE)\n    },\n  }\n}\n","import {send, decode, script, args, arg, cdc} from \"@onflow/fcl\"\nimport {Address} from \"@onflow/types\"\n\nconst CODE = cdc`\n  import FungibleToken from 0xFungibleToken\n  import Kibble from 0xKibble\n\n  pub fun main(address: Address): UFix64? {\n    if let vault = getAccount(address).getCapability<&{FungibleToken.Balance}>(Kibble.BalancePublicPath).borrow() {\n      return vault.balance\n    }\n    return nil\n  }\n\n`\n\nexport function fetchKibblesBalance(address) {\n  if (address == null) return Promise.resolve(false)\n\n  // prettier-ignore\n  return send([\n    script(CODE),\n    args([\n      arg(address, Address)\n    ])\n  ]).then(decode)\n}\n","import {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {fetchKibblesBalance} from \"../flow/fetch-kibbles-balance.script\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\n\nexport const valueAtom = atomFamily({\n  key: \"kibbles-balance::state\",\n  default: selectorFamily({\n    key: \"kibbles-balance::default\",\n    get: address => async () => fetchKibblesBalance(address),\n  }),\n})\n\nexport const statusAtom = atomFamily({\n  key: \"kibbles-balance::status\",\n  default: IDLE,\n})\n\nexport function useKibblesBalance(address) {\n  const [balance, setBalance] = useRecoilState(valueAtom(address))\n  const [status, setStatus] = useRecoilState(statusAtom(address))\n\n  async function refresh() {\n    setStatus(PROCESSING)\n    await fetchKibblesBalance(address).then(setBalance)\n    setStatus(IDLE)\n  }\n\n  return {\n    balance,\n    status,\n    refresh,\n    async mint() {\n      setStatus(PROCESSING)\n      await fetch(process.env.REACT_APP_API_KIBBLE_MINT, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          recipient: address,\n          amount: 50.0,\n        }),\n      })\n      await fetchKibblesBalance(address).then(setBalance)\n      setStatus(IDLE)\n    },\n  }\n}\n","import {\n  atomFamily,\n  selectorFamily,\n  useRecoilState,\n  useRecoilValue,\n} from \"recoil\"\nimport {\n  LOADING,\n  IDLE,\n  PROCESSING,\n  SUCCESS,\n  ERROR,\n  IDLE_DELAY,\n} from \"../global/constants\"\nimport {isAccountInitialized} from \"../flow/is-account-initialized.script\"\nimport {initializeAccount} from \"../flow/initialize-account.tx\"\nimport {sleep} from \"../util/sleep\"\nimport {useFlowBalance} from \"./use-flow-balance.hook\"\nimport {useKibblesBalance} from \"./use-kibbles-balance.hook\"\n\nexport const $status = atomFamily({\n  key: \"init::status\",\n  default: IDLE,\n})\n\nexport const $init = atomFamily({\n  key: \"init::state\",\n  default: selectorFamily({\n    key: \"init::default\",\n    get: address => () => isAccountInitialized(address),\n  }),\n})\n\nexport const $computedInit = selectorFamily({\n  key: \"init::computed\",\n  get: address => async ({get}) => {\n    const all = get($init(address))\n    return all.Kibble && all.KittyItems && all.KittyItemsMarket\n  },\n})\n\nexport function useInitialized(address) {\n  const [init, setInit] = useRecoilState($init(address))\n  const isInitialized = useRecoilValue($computedInit(address))\n  const [status, setStatus] = useRecoilState($status(address))\n  const flow = useFlowBalance(address)\n  const kibble = useKibblesBalance(address)\n\n  function recheck() {\n    isAccountInitialized(address).then(setInit)\n  }\n\n  return {\n    ...init,\n    isInitialized,\n    status: isInitialized == null ? LOADING : status,\n    recheck,\n    async initialize() {\n      initializeAccount(address, {\n        onStart() {\n          setStatus(PROCESSING)\n        },\n        async onSuccess() {\n          recheck()\n          flow.refresh()\n          kibble.refresh()\n          setStatus(SUCCESS)\n        },\n        onError() {\n          setStatus(ERROR)\n        },\n        async onComplete() {\n          await sleep(IDLE_DELAY)\n          setStatus(IDLE)\n        },\n      })\n    },\n  }\n}\n","export default __webpack_public_path__ + \"static/media/Vault.a8c165f7.jpg\";","import {Suspense} from \"react\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {Link as A} from \"react-router-dom\"\nimport {\n  Box,\n  Button,\n  Spacer,\n  Link,\n  Center\n} from \"@chakra-ui/react\"\n\nimport Vault from \"./Images/Vault.jpg\"\n\nexport function AuthCluster() {\n  const [user, loggedIn, {signUp, logIn, logOut}] = useCurrentUser()\n\n  return loggedIn ? (\n    <Box backgroundImage={'url(https://burst.shopifycdn.com/photos/ripples-of-sand-in-black-and-white.jpg?width=4460&height=4460&exif=1&iptc=1)'}\n    backgroundSize={'cover'} backgroundPosition={'center center'} p={5}>\n      <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" \n        integrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" \n        crossOrigin=\"anonymous\"></link>\n      <div className=\"jumbotron-fluid\">\n        <Center className=\"container-fluid\" >\n          <img className=\"img-fluid rounded-circle\" alt=\"vaultDoor\" src={Vault} style={{width: 225, height: 200}}/>\n        </Center>\n        <div className=\"container-fluid text-center\">\n          <h1 className=\"display-3 font-weight-bold align-middle text-white\">The Vault</h1>\n        </div>\n        <Spacer />\n        <div className=\"container-fluid text-center text-white\">\n          <Link as={A} mr=\"4\" to={\"/\" + user.addr}>\n            <u>Acct: {user.addr}</u>\n          </Link>\n          <Button type=\"button\" className=\"btn btn-light mr-5\" onClick={logOut}>\n            Log Out\n          </Button> \n        </div>\n      </div>\n    </Box>\n  ) : (\n    <Box backgroundImage={'url(https://burst.shopifycdn.com/photos/ripples-of-sand-in-black-and-white.jpg?width=4460&height=4460&exif=1&iptc=1)'}\n    backgroundSize={'cover'} backgroundPosition={'center center'} p={5}>\n      <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" \n        integrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" \n        crossOrigin=\"anonymous\"></link>\n      <div className=\"jumbotron-fluid\" id=\"bg\">\n        <Center className=\"container-fluid\" >\n          <img className=\"img-fluid rounded-circle\" alt=\"vaultDoor\" src={Vault} style={{width: 285, height: 250}}/>\n        </Center>\n        <div className=\"container-fluid text-center\">\n          <h1 className=\"display-3 font-weight-bold align-middle text-white\">The Vault</h1>\n        </div>\n        <Spacer />\n        <div className=\"container-fluid text-center\">\n          <Box>\n          <Button mr=\"4\" type=\"button\" className=\"btn btn-light btn-group mr-5\" onClick={logIn}>\n            Log In\n          </Button>\n          <Button mr=\"4\" type=\"button\" className=\"btn btn-light btn-group ml-5\" onClick={signUp}>\n            Sign Up\n          </Button>\n          </Box>\n          </div>\n      </div>\n    </Box>\n  )\n}\n\nexport default function WrappedAuthCluster() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <AuthCluster />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useInitialized} from \"../hooks/use-initialized.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {\n  Box,\n  Button,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  Flex,\n  Heading,\n  Spinner,\n  Center,\n} from \"@chakra-ui/react\"\nimport {CheckIcon, CloseIcon} from \"@chakra-ui/icons\"\n\nconst fmtBool = bool =>\n  bool ? <CheckIcon color=\"green.500\" /> : <CloseIcon color=\"red.500\" />\n\nexport function InitCluster({address}) {\n  const init = useInitialized(address)\n  const [cu] = useCurrentUser()\n  if (address == null) return null\n\n  return (\n    <Box mb=\"4\">\n      <Box mb=\"2\">\n        <Flex>\n          <Heading size=\"md\" mr=\"4\">\n            Account Initialized?\n          </Heading>\n          {init.status !== IDLE && (\n            <Center>\n              <Spinner />\n            </Center>\n          )}\n        </Flex>\n      </Box>\n      <Box maxW=\"200px\" borderWidth=\"1px\" borderRadius=\"lg\">\n        <Table size=\"sm\">\n          <Tbody>\n            <Tr>\n              <Td>VCoin Access</Td>\n              <Td>{fmtBool(init.Kibble)}</Td>\n            </Tr>\n            <Tr>\n              <Td>NFT Access</Td>\n              <Td>{fmtBool(init.KittyItems)}</Td>\n            </Tr>\n            <Tr>\n              <Td>NFT Market Access</Td>\n              <Td>{fmtBool(init.KittyItemsMarket)}</Td>\n            </Tr>\n          </Tbody>\n        </Table>\n      </Box>\n      {!init.isInitialized && address === cu.addr && (\n        <Box mt=\"2\">\n          <Flex>\n            <Button\n              colorScheme=\"blue\"\n              disabled={init.status !== IDLE}\n              onClick={init.initialize}\n            >\n              Initialize Account\n            </Button>\n          </Flex>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default function WrappedInitCluster(props) {\n  const [cu] = useCurrentUser()\n  if (cu.addr !== props.address) return null\n\n  return (\n    <Suspense\n      fallback={\n        <Box mb=\"2\">\n          <Flex>\n            <Heading size=\"md\" mr=\"4\">\n              Account Initialized?\n            </Heading>\n            <Center>\n              <Spinner size=\"sm\" />\n            </Center>\n          </Flex>\n        </Box>\n      }\n    >\n      <InitCluster {...props} />\n    </Suspense>\n  )\n}\n","export function fmtKibbles(balance, cur = false) {\n  if (balance == null) return null\n  return [\n    String(balance).replace(/0+$/, \"\").replace(/\\.$/, \"\"),\n    cur && \"KIBBLE\",\n  ]\n    .filter(Boolean)\n    .join(\" \")\n}\n","import {Suspense} from \"react\"\nimport {useFlowBalance} from \"../hooks/use-flow-balance.hook\"\nimport {useKibblesBalance} from \"../hooks/use-kibbles-balance.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {fmtKibbles} from \"../util/fmt-kibbles\"\nimport {\n  Box,\n  Button,\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  Flex,\n  Heading,\n  Spinner,\n  Center,\n} from \"@chakra-ui/react\"\nimport {useInitialized} from \"../hooks/use-initialized.hook\"\n\nexport function BalanceCluster({address}) {\n  const flow = useFlowBalance(address)\n  const kibbles = useKibblesBalance(address)\n  const init = useInitialized(address)\n  return (\n    <Box mb=\"4\">\n      <Box mb=\"2\">\n        <Flex>\n          <Heading size=\"md\" mr=\"4\">\n            Balances\n          </Heading>\n          {(flow.status !== IDLE || kibbles.status !== IDLE) && (\n            <Center>\n              <Spinner size=\"sm\" />\n            </Center>\n          )}\n        </Flex>\n      </Box>\n      <Box maxW=\"200px\" borderWidth=\"1px\" borderRadius=\"lg\">\n        <Table size=\"sm\">\n          <Tbody>\n            <Tr>\n              <Td>VCoins</Td>\n              {kibbles.status === IDLE ? (\n                <Td isNumeric>{fmtKibbles(kibbles.balance)}</Td>\n              ) : (\n                <Td isNumeric>\n                  <Spinner size=\"sm\" />\n                </Td>\n              )}\n            </Tr>\n          </Tbody>\n        </Table>\n      </Box>\n      <Box mt=\"2\">\n        <Flex>\n          <Button\n            colorScheme=\"blue\"\n            disabled={kibbles.status !== IDLE || !init.isInitialized}\n            onClick={kibbles.mint}\n          >\n            Request VCoins\n          </Button>\n        </Flex>\n      </Box>\n    </Box>\n  )\n}\n\nexport default function WrappedBalanceCluster(props) {\n  const [cu] = useCurrentUser()\n  if (cu.addr !== props.address) return null\n\n  return (\n    <Suspense\n      fallback={\n        <Flex>\n          <Heading size=\"md\" mr=\"4\">\n            Balances\n          </Heading>\n          <Center>\n            <Spinner size=\"sm\" />\n          </Center>\n        </Flex>\n      }\n    >\n      <BalanceCluster {...props} />\n    </Suspense>\n  )\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\n\nexport async function fetchMarketItem(address, id) {\n  return fcl\n    .send([\n      fcl.script`\n      import KittyItemsMarket from 0xKittyItemsMarket\n\n      pub struct SaleItem {\n        pub let itemID: UInt64\n        pub let typeID: UInt64\n        pub let owner: Address\n        pub let price: UFix64\n        \n\n        init(itemID: UInt64, typeID: UInt64, owner: Address, price: UFix64, ) {\n          self.itemID = itemID\n          self.typeID = typeID\n          self.owner = owner\n          self.price = price\n        }\n      }\n\n      pub fun main(address: Address, id: UInt64): SaleItem? {\n        if let collection = getAccount(address).getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath).borrow() {\n          if let item = collection.borrowSaleItem(itemID: id) {\n            return SaleItem(itemID: id, typeID: item.typeID, owner: address, price: item.price)\n          }\n        }\n        return nil\n      }\n    `,\n      fcl.args([fcl.arg(address, t.Address), fcl.arg(Number(id), t.UInt64)]),\n    ])\n    .then(fcl.decode)\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nconst CODE = fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  transaction(itemID: UInt64, marketCollectionAddress: Address) {\n      let paymentVault: @FungibleToken.Vault\n      let kittyItemsCollection: &KittyItems.Collection{NonFungibleToken.Receiver}\n      let marketCollection: &KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}\n\n      prepare(acct: AuthAccount) {\n          self.marketCollection = getAccount(marketCollectionAddress)\n              .getCapability<&KittyItemsMarket.Collection{KittyItemsMarket.CollectionPublic}>(KittyItemsMarket.CollectionPublicPath)\n              .borrow() ?? panic(\"Could not borrow market collection from market address\")\n\n          let price = self.marketCollection.borrowSaleItem(itemID: itemID)!.price\n\n          let mainKibbleVault = acct.borrow<&Kibble.Vault>(from: Kibble.VaultStoragePath)\n              ?? panic(\"Cannot borrow Kibble vault from acct storage\")\n          self.paymentVault <- mainKibbleVault.withdraw(amount: price)\n\n          self.kittyItemsCollection = acct.borrow<&KittyItems.Collection{NonFungibleToken.Receiver}>(\n              from: KittyItems.CollectionStoragePath\n          ) ?? panic(\"Cannot borrow KittyItems collection receiver from acct\")\n      }\n\n      execute {\n          self.marketCollection.purchase(\n              itemID: itemID,\n              buyerCollection: self.kittyItemsCollection,\n              buyerPayment: <- self.paymentVault\n          )\n      }\n  }\n`\n\n// prettier-ignore\nexport function buyMarketItem({itemID, ownerAddress}, opts = {}) {\n  invariant(itemID != null, \"buyMarketItem({itemID, ownerAddress}) -- itemID required\")\n  invariant(ownerAddress != null, \"buyMarketItem({itemID, ownerAddress}) -- ownerAddress required\")\n\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemID), t.UInt64),\n      fcl.arg(String(ownerAddress), t.Address),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([fcl.authz]),\n    fcl.limit(1000),\n  ], opts)\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nconst CODE = fcl.cdc`\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  transaction(itemID: UInt64) {\n      prepare(account: AuthAccount) {\n          let listing <- account\n            .borrow<&KittyItemsMarket.Collection>(from: KittyItemsMarket.CollectionStoragePath)!\n            .remove(itemID: itemID)\n          destroy listing\n      }\n  }\n`\n\n// prettier-ignore\nexport function cancelMarketListing({ itemID }, opts = {}) {\n  invariant(itemID != null, \"cancelMarketListing({itemID}) -- itemID required\")\n\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemID), t.UInt64),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([fcl.authz]),\n    fcl.limit(1000),\n  ], opts)\n}\n","import {useEffect} from \"react\"\nimport {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {sansPrefix} from \"@onflow/fcl\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useKibblesBalance} from \"../hooks/use-kibbles-balance.hook\"\nimport {fetchMarketItem} from \"../flow/fetch-market-item.script\"\nimport {buyMarketItem} from \"../flow/buy-market-item.tx\"\nimport {cancelMarketListing} from \"../flow/cancel-market-listing.tx\"\n\nfunction expand(key) {\n  return key.split(\"|\")\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\")\n}\n\nexport const $state = atomFamily({\n  key: \"market-item::state\",\n  default: selectorFamily({\n    key: \"market-item::default\",\n    get: key => async () => await fetchMarketItem(...expand(key)),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"market-item::status\",\n  default: IDLE,\n})\n\nexport function useMarketItem(address, id) {\n  const [cu] = useCurrentUser()\n  const ownerItems = useAccountItems(address)\n  const cuItems = useAccountItems(cu.addr)\n  const kibble = useKibblesBalance(cu.addr)\n  const key = comp(address, id)\n  const [item, setItem] = useRecoilState($state(key))\n  const [status, setStatus] = useRecoilState($status(key))\n  const owned = sansPrefix(cu.addr) === sansPrefix(address)\n\n  useEffect(() => {\n    fetchMarketItem(...expand(key)).then(setItem)\n  }, [key, setItem])\n\n  return {\n    ...item,\n    status,\n    owned,\n    async buy() {\n      await buyMarketItem(\n        {itemID: id, ownerAddress: address},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            if (address !== cu.addr) {\n              ownerItems.refresh()\n            }\n            cuItems.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async cancelListing() {\n      await cancelMarketListing(\n        {itemID: id},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            cuItems.refresh()\n            kibble.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchMarketItem(...expand(key)).then(setItem)\n      setStatus(IDLE)\n    },\n  }\n}\n","// TODO: MOVE TO @onflow/util-batch\nimport {spawn, send, INIT} from \"@onflow/util-actor\"\nimport {uid} from \"@onflow/util-uid\"\n\nconst TICK = 500\nconst BUFFER_SIZE = 10\n\nconst SET_CALLBACK = \"SET_CALLBACK\"\nconst PROCESS = \"PROCESS\"\nconst MAYBE_PROCESS = \"MAYBE_PROCESS\"\nconst TIMEOUT = \"TIMEOUT\"\nconst ENQUEUE = \"ENQUEUE\"\nconst RESOLVE = \"RESOLVE\"\n\nconst HANDLERS = {\n  [INIT]: ctx => {\n    ctx.put(\"need\", new Set())\n    ctx.put(\"processing\", new Set())\n    ctx.put(\"hold\", {})\n    setInterval(() => ctx.sendSelf(TIMEOUT), TICK)\n  },\n\n  [SET_CALLBACK]: (ctx, letter, callback) => {\n    ctx.put(\"callback\", async (...args) => callback(...args))\n    ctx.sendSelf(MAYBE_PROCESS)\n  },\n\n  [ENQUEUE]: (ctx, letter, args) => {\n    const id = uid()\n    const hold = {id, args, reply: letter.reply}\n    ctx.update(\"need\", n => {\n      n.add(id)\n      return n\n    })\n    ctx.update(\"hold\", h => ({...h, [id]: hold}))\n    ctx.sendSelf(MAYBE_PROCESS)\n  },\n\n  [TIMEOUT]: ctx => {\n    if (ctx.get(\"need\").size) ctx.sendSelf(PROCESS)\n  },\n\n  [MAYBE_PROCESS]: ctx => {\n    if (ctx.get(\"need\") >= BUFFER_SIZE) ctx.sendSelf(PROCESS)\n  },\n\n  [PROCESS]: ctx => {\n    const callback = ctx.get(\"callback\")\n    if (typeof callback !== \"function\") return\n\n    const need = ctx.get(\"need\")\n    ctx.update(\"processing\", p => new Set([...p, ...need]))\n    ctx.put(\"need\", new Set())\n\n    const hold = ctx.get(\"hold\")\n    const payload = [...need].reduce(\n      (acc, key) => ({...acc, [key]: hold[key].args}),\n      {}\n    )\n\n    callback(payload).then(result => {\n      ctx.sendSelf(RESOLVE, result)\n    })\n  },\n  [RESOLVE]: (ctx, _, results) => {\n    const have = Object.keys(results)\n    for (let h of have) {\n      const hold = ctx.get(\"hold\")\n      hold[h].reply(results[h])\n      ctx.update(\"processing\", p => {\n        p.delete(h)\n        return p\n      })\n      ctx.update(\"hold\", hold => {\n        delete hold[h]\n        return hold\n      })\n    }\n  },\n}\n\nexport const batch = (name, callback) => {\n  spawn(HANDLERS, name)\n  send(name, SET_CALLBACK, callback)\n\n  return {\n    enqueue(...args) {\n      return send(name, ENQUEUE, args, {expectReply: true, timeout: 0})\n    },\n  }\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {batch} from \"./util/batch\"\n\nconst CODE = fcl.cdc`\nimport NonFungibleToken from 0xNonFungibleToken\nimport KittyItems from 0xKittyItems\n\npub struct AccountItem {\n  pub let itemID: UInt64\n  pub let typeID: UInt64\n  pub let owner: Address\n\n  init(itemID: UInt64, typeID: UInt64, owner: Address) {\n    self.itemID = itemID\n    self.typeID = typeID\n    self.owner = owner\n  }\n}\n\npub fun fetch(address: Address, id: UInt64): AccountItem? {\n  if let col = getAccount(address).getCapability<&KittyItems.Collection{NonFungibleToken.CollectionPublic, KittyItems.KittyItemsCollectionPublic}>(KittyItems.CollectionPublicPath).borrow() {\n    if let item = col.borrowKittyItem(id: id) {\n      return AccountItem(itemID: id, typeID: item.typeID, owner: address)\n    }\n  }\n\n  return nil\n}\n\npub fun main(keys: [String], addresses: [Address], ids: [UInt64]): {String: AccountItem?} {\n  let r: {String: AccountItem?} = {}\n  var i = 0\n  while i < keys.length {\n    let key = keys[i]\n    let address = addresses[i]\n    let id = ids[i]\n    r[key] = fetch(address: address, id: id)\n    i = i + 1\n  }\n  return r\n}\n`\n\nconst collate = px => {\n  return Object.keys(px).reduce(\n    (acc, key) => {\n      acc.keys.push(key)\n      acc.addresses.push(px[key][0])\n      acc.ids.push(px[key][1])\n      return acc\n    },\n    {keys: [], addresses: [], ids: []}\n  )\n}\n\nconst {enqueue} = batch(\"FETCH_ACCOUNT_ITEM\", async px => {\n  const {keys, addresses, ids} = collate(px)\n\n  return fcl\n    .send([\n      fcl.script(CODE),\n      fcl.args([\n        fcl.arg(keys, t.Array(t.String)),\n        fcl.arg(addresses, t.Array(t.Address)),\n        fcl.arg(ids.map(Number), t.Array(t.UInt64)),\n      ]),\n    ])\n    .then(fcl.decode)\n})\n\nexport async function fetchAccountItem(address, id) {\n  if (address == null) return Promise.resolve(null)\n  if (id == null) return Promise.resolve(null)\n  return enqueue(address, id)\n}\n","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\nimport {tx} from \"./util/tx\"\n\nconst CODE = fcl.cdc`\n  import FungibleToken from 0xFungibleToken\n  import NonFungibleToken from 0xNonFungibleToken\n  import Kibble from 0xKibble\n  import KittyItems from 0xKittyItems\n  import KittyItemsMarket from 0xKittyItemsMarket\n\n  transaction(itemID: UInt64, price: UFix64) {\n    let kibbleVault: Capability<&Kibble.Vault{FungibleToken.Receiver}>\n    let kittyItemsCollection: Capability<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>\n    let marketCollection: &KittyItemsMarket.Collection\n\n    prepare(signer: AuthAccount) {\n        // we need a provider capability, but one is not provided by default so we create one.\n        let KittyItemsCollectionProviderPrivatePath = /private/kittyItemsCollectionProvider\n\n        self.kibbleVault = signer.getCapability<&Kibble.Vault{FungibleToken.Receiver}>(Kibble.ReceiverPublicPath)!\n        assert(self.kibbleVault.borrow() != nil, message: \"Missing or mis-typed Kibble receiver\")\n\n        if !signer.getCapability<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>(KittyItemsCollectionProviderPrivatePath)!.check() {\n            signer.link<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>(KittyItemsCollectionProviderPrivatePath, target: KittyItems.CollectionStoragePath)\n        }\n\n        self.kittyItemsCollection = signer.getCapability<&KittyItems.Collection{NonFungibleToken.Provider, KittyItems.KittyItemsCollectionPublic}>(KittyItemsCollectionProviderPrivatePath)!\n        assert(self.kittyItemsCollection.borrow() != nil, message: \"Missing or mis-typed KittyItemsCollection provider\")\n\n        self.marketCollection = signer.borrow<&KittyItemsMarket.Collection>(from: KittyItemsMarket.CollectionStoragePath)\n            ?? panic(\"Missing or mis-typed KittyItemsMarket Collection\")\n    }\n\n    execute {\n        let offer <- KittyItemsMarket.createSaleOffer (\n            sellerItemProvider: self.kittyItemsCollection,\n            itemID: itemID,\n            typeID: self.kittyItemsCollection.borrow()!.borrowKittyItem(id: itemID)!.typeID,\n            sellerPaymentReceiver: self.kibbleVault,\n            price: price\n        )\n        self.marketCollection.insert(offer: <-offer)\n    }\n}\n`\n\nexport function createSaleOffer({itemID, price}, opts = {}) {\n  if (itemID == null)\n    throw new Error(\"createSaleOffer(itemID, price) -- itemID required\")\n  if (price == null)\n    throw new Error(\"createSaleOffer(itemID, price) -- price required\")\n\n  // prettier-ignore\n  return tx([\n    fcl.transaction(CODE),\n    fcl.args([\n      fcl.arg(Number(itemID), t.UInt64),\n      fcl.arg(String(price), t.UFix64),\n    ]),\n    fcl.proposer(fcl.authz),\n    fcl.payer(fcl.authz),\n    fcl.authorizations([\n      fcl.authz\n    ]),\n    fcl.limit(1000)\n  ], opts)\n}\n","import {sansPrefix} from \"@onflow/fcl\"\nimport {atomFamily, selectorFamily, useRecoilState} from \"recoil\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {fetchAccountItem} from \"../flow/fetch-account-item.script\"\nimport {createSaleOffer} from \"../flow/create-sale-offer.tx\"\nimport {IDLE, PROCESSING} from \"../global/constants\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useMarketItems} from \"../hooks/use-market-items.hook\"\n\nfunction expand(key) {\n  return key.split(\"|\")\n}\n\nfunction comp(address, id) {\n  return [address, id].join(\"|\")\n}\n\nexport const $state = atomFamily({\n  key: \"account-item::state\",\n  default: selectorFamily({\n    key: \"account-item::default\",\n    get: key => async () => fetchAccountItem(...expand(key)),\n  }),\n})\n\nexport const $status = atomFamily({\n  key: \"account-item::status\",\n  default: IDLE,\n})\n\nexport function useAccountItem(address, id) {\n  const [cu] = useCurrentUser()\n  const accountItems = useAccountItems(address)\n  const marketItems = useMarketItems()\n  const key = comp(address, id)\n  const [item, setItem] = useRecoilState($state(key))\n  const [status, setStatus] = useRecoilState($status(key))\n\n  return {\n    ...item,\n    status,\n    forSale: marketItems.has(item),\n    owned: sansPrefix(cu.addr) === sansPrefix(address),\n    async sell(price) {\n      await createSaleOffer(\n        {itemID: id, price: price},\n        {\n          onStart() {\n            setStatus(PROCESSING)\n          },\n          async onSuccess() {\n            accountItems.refresh()\n          },\n          async onComplete() {\n            setStatus(IDLE)\n          },\n          async onError(error) {\n            // TODO: Handle error\n          },\n        }\n      )\n    },\n    async refresh() {\n      setStatus(PROCESSING)\n      await fetchAccountItem(...expand(key)).then(setItem)\n      setStatus(IDLE)\n    },\n  }\n}\n","import React, {useEffect, useState, Suspense} from \"react\"\nimport {useAccountItem} from \"../hooks/use-account-item.hook\"\nimport {useMarketItem} from \"../hooks/use-market-item.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {\n  Tr,\n  Td,\n  Button,\n  Spinner,\n  Flex,\n  Center,\n  Text,\n  Image,\n  HStack,\n} from \"@chakra-ui/react\"\n\nexport const ItemImage = ({typeID}) => {\n  // Lazy load SVG images for the kitty items.\n  let [item, setItemImage] = useState(\"\")\n\n  useEffect(() => {\n    async function getImage() {\n      let importedIcon = await import(`../svg/Items/item0${typeID}.svg`)\n      setItemImage(importedIcon.default)\n    }\n    if (typeID) getImage()\n  }, [typeID])\n\n  return <Image maxW=\"64px\" src={item} />\n}\n\nexport function AccountItemCluster({address, id}) {\n  const item = useAccountItem(address, id)\n  const listing = useMarketItem(address, id)\n  const [cu] = useCurrentUser()\n\n  const BUSY = item.status !== IDLE || listing.status !== IDLE\n\n  if (address == null) return null\n  if (id == null) return null\n\n  return (\n    <Tr>\n      <Td maxW=\"50px\">\n        <Flex>\n          <Text as={item.forSale && \"del\"}>#{item.itemID}</Text>\n        </Flex>\n      </Td>\n      <Td>({item.typeID})</Td>\n      <Td>\n        <ItemImage typeID={item.typeID} />\n      </Td>\n      {cu.addr === address && (\n        <>\n          {!item.forSale ? (\n            <Td isNumeric>\n              <Button\n                colorScheme=\"blue\"\n                size=\"sm\"\n                disabled={BUSY}\n                onClick={() => item.sell(\"10.0\")}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />}{\" \"}\n                  <Text>List NFT For Sale</Text>\n                </HStack>\n              </Button>\n            </Td>\n          ) : (\n            <Td isNumeric>\n              <Button\n                size=\"sm\"\n                colorScheme=\"orange\"\n                disabled={BUSY}\n                onClick={listing.cancelListing}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />} <Text>Unlist</Text>\n                </HStack>\n              </Button>\n            </Td>\n          )}\n        </>\n      )}\n    </Tr>\n  )\n}\n\nexport default function WrappedAccountItemCluster(props) {\n  return (\n    <Suspense\n      fallback={\n        <Tr>\n          <Td>\n            <Flex>\n              <Text>#{props.id}</Text>\n              <Center ml=\"4\">\n                <Spinner size=\"xs\" />\n              </Center>\n            </Flex>\n          </Td>\n          <Td />\n          <Td />\n          <Td />\n        </Tr>\n      }\n    >\n      <AccountItemCluster {...props} />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useMarketItem} from \"../hooks/use-market-item.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {IDLE} from \"../global/constants\"\nimport {\n  Tr,\n  Td,\n  Button,\n  Spinner,\n  Flex,\n  Center,\n  Text,\n  HStack,\n} from \"@chakra-ui/react\"\n\nimport {ItemImage} from \"./account-item-cluster.comp\"\n\nexport function MarketItemCluster({address, id}) {\n  const [cu, loggedIn] = useCurrentUser()\n  const item = useMarketItem(address, id)\n\n  const BUSY = item.status !== IDLE || item.status !== IDLE\n\n  return (\n    <Tr>\n      <Td maxW=\"50px\">\n        <Flex>\n          <Text>#{item.itemID}</Text>\n        </Flex>\n      </Td>\n      <Td>({item.typeID})</Td>\n      <Td>\n        <ItemImage typeID={item.typeID} />\n      </Td>\n      <Td>{item.price}</Td>\n      {loggedIn && (\n        <>\n          {item.owner === cu.addr ? (\n            <Td isNumeric>\n              <Button\n                colorScheme=\"orange\"\n                size=\"sm\"\n                disabled={BUSY}\n                onClick={item.cancelListing}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />}\n                  <Text>Unlist</Text>\n                </HStack>\n              </Button>\n            </Td>\n          ) : (\n            <Td isNumeric>\n              <Button\n                colorScheme=\"blue\"\n                size=\"sm\"\n                disabled={BUSY}\n                onClick={item.buy}\n              >\n                <HStack>\n                  {BUSY && <Spinner mr=\"2\" size=\"xs\" />}\n                  <Text>Buy</Text>\n                </HStack>\n              </Button>\n            </Td>\n          )}\n        </>\n      )}\n    </Tr>\n  )\n}\n\nexport default function WrappedMarketItemCluster(props) {\n  return (\n    <Suspense\n      fallback={\n        <Tr>\n          <Td maxW=\"50px\">\n            <Flex>\n              <Text>#{props.id}</Text>\n              <Center ml=\"4\">\n                <Spinner size=\"xs\" />\n              </Center>\n            </Flex>\n          </Td>\n          <Td />\n          <Td />\n        </Tr>\n      }\n    >\n      <MarketItemCluster {...props} />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useMarketItems} from \"../hooks/use-market-items.hook\"\nimport Item from \"./market-item-cluster.comp\"\nimport {Box, Table, Thead, Tbody, Tr, Th, Text, Spinner} from \"@chakra-ui/react\"\n\nexport function MarketItemsCluster() {\n  const {items, status} = useMarketItems()\n\n  if (items.length <= 0)\n    return (\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n        <Text>No Items Listed For Sale</Text>\n      </Box>\n    )\n\n  return (\n    <Box borderWidth=\"1px\" borderRadius=\"lg\">\n      <Table size=\"sm\">\n        <Thead>\n          <Tr>\n            <Th>Id</Th>\n            <Th>Type</Th>\n            <Th>Name</Th>\n            <Th>Description</Th>\n            <Th>Image</Th>\n            <Th>Price</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {items.map(item => (\n            <Item\n              key={item.itemID}\n              id={item.itemID}\n              //name={}\n              //Description={}\n              address={item.owner}\n              status={status}\n            />\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  )\n}\n\nexport default function WrappedMarketItemsCluster() {\n  return (\n    <Suspense\n      fallback={\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n          <Spinner />\n        </Box>\n      }\n    >\n      <MarketItemsCluster />\n    </Suspense>\n  )\n}\n","import {Suspense} from \"react\"\nimport {useAccountItems} from \"../hooks/use-account-items.hook\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport Item from \"./account-item-cluster.comp\"\nimport {Box, Table, Thead, Tbody, Tr, Th, Text, Spinner} from \"@chakra-ui/react\"\n\nexport function AccountItemsCluster({address}) {\n  const items = useAccountItems(address)\n  const [cu] = useCurrentUser()\n\n  if (address == null) return null\n\n  if (items.ids.length <= 0)\n    return (\n      <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n        <Text>No Items</Text>\n      </Box>\n    )\n\n  return (\n    <Box borderWidth=\"1px\" borderRadius=\"lg\">\n      <Table size=\"sm\">\n        <Thead>\n          <Tr>\n            <Th>Id</Th>\n            <Th>Type</Th>\n            <Th>Image</Th>\n            {cu.addr === address && <Th />}\n          </Tr>\n        </Thead>\n        <Tbody>\n          {items.ids.map(id => (\n            <Item key={id} id={id} address={address} />\n          ))}\n        </Tbody>\n      </Table>\n    </Box>\n  )\n}\n\nexport default function WrappedAccountItemsCluster({address}) {\n  return (\n    <Suspense\n      fallback={\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"4\">\n          <Spinner />\n        </Box>\n      }\n    >\n      <AccountItemsCluster address={address} />\n    </Suspense>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/market.36602558.jpg\";","export default __webpack_public_path__ + \"static/media/NFT.1f4ee2a2.jpg\";","export default __webpack_public_path__ + \"static/media/createnft.9e13d940.jpg\";","import {Suspense} from \"react\"\nimport {Base} from \"../../parts/base.comp\"\nimport {IDLE} from \"../../global/constants\"\nimport {useAddress} from \"../../hooks/use-url-address.hook\"\nimport {useCurrentUser} from \"../../hooks/use-current-user.hook\"\nimport {useMarketItems} from \"../../hooks/use-market-items.hook\"\nimport {useAccountItems} from \"../../hooks/use-account-items.hook\"\nimport {useInitialized} from \"../../hooks/use-initialized.hook\"\nimport {useKibblesBalance} from \"../../hooks/use-kibbles-balance.hook\"\nimport AuthCluster from \"../../parts/auth-cluster.comp\"\nimport InitCluster from \"../../parts/init-cluster.comp\"\nimport BalanceCluster from \"../../parts/balance-cluster.comp\"\nimport MarketItemsCluster from \"../../parts/market-items-cluster.comp\"\nimport CreateNFTCluster from \"../../parts/create-nft-cluster.comp.js\"\nimport AccountItemsCluster from \"../../parts/account-items-cluster.comp\"\nimport {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Badge,\n  Flex,\n  Center,\n  Tag,\n  Text,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n  Spinner,\n  HStack,\n  Image,\n} from \"@chakra-ui/react\"\n\nimport market from \"../../parts/Images/market.jpg\"\nimport NFT from \"../../parts/Images/NFT.jpg\"\nimport create from \"../../parts/Images/createnft.jpg\"\n\nexport function MarketItemsCount() {\n  let l = 0\n  return l > 0 ? <Tag ml=\"1\">{l}</Tag> : null\n}\n\nexport function AccountItemsCount({address}) {\n  const items = useAccountItems(address)\n  if (items.status !== IDLE) return <Spinner size=\"xs\" ml=\"1\" />\n  const l = items?.ids?.length ?? 0\n  return l > 0 ? <Tag ml=\"1\">{l}</Tag> : null\n}\n\nexport function StoreItemsCount() {\n  const items = useMarketItems()\n  if (items.status !== IDLE) return <Spinner size=\"xs\" ml=\"1\" />\n  const l = items?.ids?.length ?? 0\n  return l > 0 ? <Tag ml=\"1\">{l}</Tag> : null\n}\n\n\n\nexport function InfoBanner({address}) {\n  const init = useInitialized(address)\n  const kibs = useKibblesBalance(address)\n  const [cu] = useCurrentUser()\n\n  const status = {\n    notInitialized: {\n      type: \"info\",\n      title: \"Initialize Your Account\",\n      text:\n        \"You need to initialize your account before you can receive VCoins.\",\n    },\n    noKibble: {\n      type: \"info\",\n      title: \"Get VCoins\",\n      text: \"You need Vcoins to buy NFTs.\",\n    },\n  }\n\n  function Banner(message) {\n    return (\n      <Flex my=\"4\">\n        <Alert status={message.type}>\n          <AlertIcon />\n          <AlertTitle mr={2}>{message.title}</AlertTitle>\n          {message.text}\n        </Alert>\n      </Flex>\n    )\n  }\n\n  switch (true) {\n    case !init.isInitialized && cu.addr === address:\n      return Banner(status.notInitialized)\n    case kibs.balance < 0 && cu.addr === address:\n      return Banner(status.noKibble)\n    default:\n      return null\n  }\n}\n\n\n\nexport function Page() {\n  const address = useAddress()\n  const [cu, loggedIn] = useCurrentUser()\n  if (address == null) return <div>Not Found</div> \n  \n\n  return loggedIn ?(\n    <Base>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" \n        integrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" \n        crossOrigin=\"anonymous\"></link>\n\n        <Box borderWidth=\"10px\" borderColor=\"black\" >\n        <AuthCluster/>\n        </Box>\n        <Box borderWidth=\"10px\" borderColor=\"#2D3748\">\n          \n        <Flex mb=\"4\">\n          <Center>\n            <Text mr=\"4\" fontSize=\"2xl\" color=\"black\">\n              Account:{\" \"}\n              <Text display=\"inline\" color=\"black\" fontWeight=\"bold\">\n                {address}\n              </Text>\n            </Text>\n          </Center>\n          {address === cu.addr && (\n            <Center>\n              <Badge ml=\"4\" variant=\"outline\" colorScheme=\"red\">\n                You\n              </Badge>\n            </Center>\n          )}\n        </Flex>\n        <Suspense fallback={null}>\n          <InfoBanner address={address} />\n        </Suspense>\n        <Flex>\n          <Box>\n            <InitCluster address={address} />\n          </Box>\n          <Box ml=\"4\">\n            <BalanceCluster address={address} />\n          </Box>\n\n\n          \n\n\n        </Flex>\n        </Box>\n        \n        <Box borderWidth=\"10px\" borderColor=\"black\" style={{backgroundColor: \"#A0AEC0\"}}>\n        <Tabs colorScheme=\"blue\" defaultIndex={0}>\n          <Center>\n          <TabList >\n            <Tab fontSize=\"2xl\">\n              <HStack>\n                <Image src={NFT} alt=\"nftToken\" style={{width: 50, height: 50}}/>\n                <Box>{cu.addr === address ? \"My\" : \"User\"} NFTs</Box>\n              </HStack>\n              <Suspense fallback={null}>\n                <AccountItemsCount address={address} />\n              </Suspense>\n            </Tab>\n            <Tab fontSize=\"2xl\">\n              <HStack>\n                <Image src={market} alt=\"Marketplace\" style={{width: 50, height: 50}}/>\n                <Box>NFT Market</Box>\n              </HStack>\n              <Suspense fallback={null}>\n                <MarketItemsCount />\n              </Suspense>\n            </Tab>\n            <Tab fontSize=\"2xl\">\n              <HStack>\n                <Image src={create} alt=\"createnft\" style={{width: 60, height: 50}}/>\n                <Box>Create NFT</Box>\n              </HStack>\n            </Tab>\n          </TabList>\n          </Center>\n\n          <TabPanels>\n            <TabPanel>\n              <AccountItemsCluster address={address} />\n            </TabPanel>\n            <TabPanel>\n              <MarketItemsCluster />\n            </TabPanel>\n            <TabPanel>\n            <Suspense fallback={null}>\n              <CreateNFTCluster address={address} />\n            </Suspense>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Base>\n  ):(\n    <Base>\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css\" \n        integrity=\"sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4\" \n        crossOrigin=\"anonymous\"></link>\n\n        <Box borderWidth=\"10px\" borderColor=\"black\" >\n        <AuthCluster/>\n        </Box>\n        <Box borderWidth=\"10px\" borderColor=\"#2D3748\">\n          \n        </Box>\n        <Box backgroundImage={'url(https://burst.shopifycdn.com/photos/sunlight-reflects-on-water-texture.jpg?width=4460&height=4460&exif=1&iptc=1)'}\n          backgroundSize={'cover'} backgroundPosition={'center center'} p={50} height={500}>\n        <Center>\n        <HStack>\n                \n                <Box fontSize=\"6xl\" color=\"white\" backgroundColor=\"black\" p={25}>\n                  What's For Sale in The Vault?\n                </Box>\n              </HStack>\n              <Suspense fallback={null}>\n                <MarketItemsCount />\n              </Suspense>\n              </Center>\n              <br/>\n              <Center>\n              <Box fontSize=\"4xl\" color=\"white\" backgroundColor=\"black\" maxW=\"lg\">\n              <MarketItemsCluster />\n              </Box>\n        </Center>\n        </Box>\n    </Base>\n  )\n}\n","import {config} from \"@onflow/fcl\"\n\nconfig()\n  .put(\"env\", process.env.REACT_APP_CHAIN_ENV)\n  .put(\"accessNode.api\", process.env.REACT_APP_FLOW_ACCESS_NODE)\n  .put(\"challenge.handshake\", process.env.REACT_APP_WALLET_DISCOVERY)\n  .put(\"0xFungibleToken\", process.env.REACT_APP_CONTRACT_FUNGIBLE_TOKEN)\n  .put(\"0xNonFungibleToken\", process.env.REACT_APP_CONTRACT_NON_FUNGIBLE_TOKEN)\n  .put(\"0xKibble\", process.env.REACT_APP_CONTRACT_KIBBLE)\n  .put(\"0xKittyItemsMarket\", process.env.REACT_APP_CONTRACT_KITTY_ITEMS_MARKET)\n  .put(\"0xKittyItems\", process.env.REACT_APP_CONTRACT_KITTY_ITEMS)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport {Switch, Route} from \"react-router-dom\"\n\nimport {Providers} from \"./global/providers.comp\"\n\nimport {Page as Root} from \"./pages/root.page\"\nimport {Page as Account} from \"./pages/account\"\nimport {Page as NotFound} from \"./pages/not-found.page\"\n\nimport * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\"\n\nimport \"./global/config\"\n\nimport \"./font.css\"\n\nwindow.fcl = fcl\nwindow.t = t\n\nReactDOM.render(\n  <Providers>\n    <Switch>\n      <Route exact path=\"/0x:address\" component={Account} />\n      <Route exact path=\"/\" component={Root} />\n      <Route component={NotFound} />\n    </Switch>\n  </Providers>,\n  document.getElementById(\"root\")\n)\n\nreportWebVitals()\n","import {Base} from \"../parts/base.comp\"\nimport {useCurrentUser} from \"../hooks/use-current-user.hook\"\nimport {Redirect} from \"react-router-dom\"\nimport {\n  Box,\n  Button,\n  Flex,\n  Center,\n  Heading,\n  Spacer,\n  HStack,\n  Image,\n} from \"@chakra-ui/react\"\n\nimport Logo from \"../svg/logo-kv.svg\"\n\nexport function Page() {\n  const [user, loggedIn, {signUp, logIn}] = useCurrentUser()\n\n  if (loggedIn) return <Redirect to={\"/\" + user.addr} />\n\n  return (\n    <Base>\n      <Box p=\"4\">\n        <Flex>\n          <Center mr=\"4\">\n            <HStack>\n              <Image src={Logo} />\n              <Heading size=\"lg\">The Vault</Heading>\n            </HStack>\n          </Center>\n          <Spacer />\n          <Button mr=\"4\" colorScheme=\"blue\" onClick={logIn}>\n            Log In\n          </Button>\n          <Button mr=\"4\" colorScheme=\"blue\" onClick={signUp}>\n            Sign Up\n          </Button>\n        </Flex>\n      </Box>\n    </Base>\n  )\n}\n","import {Base} from \"../parts/base.comp\"\n\nexport function Page() {\n  return <Base>Page: Not Found</Base>\n}\n"],"sourceRoot":""}